- name: install prepare packages
  hosts: controlplane
  become: true
  become_user: root
  tasks:
    - name: centos update yum repo
      ansible.builtin.shell: "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*"
      when: ansible_facts['os_family'] == "RedHat"
    - name: update installed packages on CentOS
      ansible.builtin.yum:
         name: '*'
         state: latest
      when: ansible_facts['os_family'] == "RedHat"
    - name: install packages on Centos
      ansible.builtin.yum:
        name:
          - net-tools
          - git
          - wget
          - conntrack-tools
          - systemd-resolved
          - net-tools
          - firewalld
          - ntp
          - ntpdate
          - socat
        state: latest
      when: ansible_facts['os_family'] == "RedHat"
    - name: update installed packages on Ubuntu
      ansible.builtin.apt:
        name: '*'
        state: latest
        update_cache: true
      when: ansible_facts['os_family'] == "Debian"
    - name: install packages on Ubuntu
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - apt-transport-https
          - wget
          - software-properties-common
          - gpg
        state: latest
      when: ansible_facts['os_family'] == "Debian"
    - name: systemctl daemon reload and reexec
      ansible.builtin.systemd:
        daemon_reload: true
        daemon_reexec: true
    - name: swapoff all
      ansible.builtin.shell: swapoff -a
    - name: umount swap
      ansible.posix.mount:
        path: none
        fstype: swap
        state: absent
    - name: disable selinux
      ansible.posix.selinux:
        policy: targeted
        state: permissive
      when: ansible_facts['os_family'] == "RedHat"
    - name: change hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
    - name: modules-load config
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        owner: root
        group: root
        mode: '0644'
    - name: config modules
      ansible.builtin.shell: modprobe overlay && modprobe br_netfilter
    - name: sysctl config
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        owner: root
        group: root
        mode: '0644'
    - name: sysctl modules
      ansible.builtin.shell: sysctl --system
